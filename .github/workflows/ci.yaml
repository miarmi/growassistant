name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Validate blueprints syntax
        run: |
          python - << 'PY'
          import yaml, glob, sys
          from pathlib import Path

          class HALoader(yaml.SafeLoader):
              pass

          def construct_passthrough(loader, node):
              # Preserve tag as a string marker so parsing succeeds
              if hasattr(node, 'value'):
                  return f"!{node.tag[1:]} {getattr(node, 'value', '')}"
              return f"!{node.tag[1:]}"

          for tag in [
              '!input','!include','!include_dir_list','!include_dir_merge_list',
              '!include_dir_named','!include_dir_merge_named','!secret',
              '!substitute','!env_var'
          ]:
              HALoader.add_constructor(tag, construct_passthrough)

          def validate(path: Path):
              try:
                  with path.open('r', encoding='utf-8') as f:
                      yaml.load(f, Loader=HALoader)
                  print(f"OK  {path}")
                  return True
              except Exception as e:
                  print(f"ERR {path}: {e}")
                  return False

          files = [
              *glob.glob('*.yaml'), *glob.glob('*.yml'),
              *glob.glob('blueprints/*.yaml'), *glob.glob('blueprints/*.yml')
          ]
          ok = True
          for f in files:
              if not validate(Path(f)):
                  ok = False
          sys.exit(0 if ok else 1)
          PY


