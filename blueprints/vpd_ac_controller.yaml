blueprint:
  name: VPD AC controller (event-driven)
  description: |
    Listens for `vpd_mode` events from the decider and sets AC accordingly.
    DRY when mode=dehumidify, AUTO + temperature otherwise.
  domain: automation
  input:
    klima:
      name: Klimatizácia
      selector:
        entity:
          domain: climate
    target_temp:
      name: Cieľová teplota (pre AUTO)
      default: 30
      selector:
        number:
          min: 15
          max: 40
          step: 0.5
          unit_of_measurement: "°C"
    enable_switch:
      name: Prepínač povolenia regulácie
      selector:
        entity:
          domain: input_boolean

    # Notifikácie (voliteľné)
    notify_enable_phone:
      name: Posielať notifikácie na telefón?
      default: true
      selector:
        boolean:
    notify_device:
      name: Telefón pre notifikácie
      default: []
      selector:
        device:
          integration: mobile_app
    notify_enable_ui:
      name: Posielať notifikácie do HA UI?
      default: false
      selector:
        boolean:

trigger:
  - platform: event
    event_type: vpd_mode

mode: single

condition:
  - condition: state
    entity_id: !input enable_switch
    state: "on"

action:
  - variables:
      mode: "{{ trigger.event.data.mode | default('normal') }}"

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ mode == 'dehumidify' }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input klima
            data:
              hvac_mode: dry
          # Notifikácie: DRY
          - choose:
              - conditions: "{{ notify_enable_phone }}"
                sequence:
                  - domain: mobile_app
                    type: notify
                    device_id: !input notify_device
                    title: "VPD AC: DRY"
                    message: "AC set to DRY (mode=dehumidify)"
              - conditions: "{{ notify_enable_ui }}"
                sequence:
                  - service: persistent_notification.create
                    data:
                      title: "VPD AC: DRY"
                      message: "AC set to DRY (mode=dehumidify)"
      - conditions:
          - condition: template
            value_template: "{{ mode == 'humidify' or mode == 'normal' }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input klima
            data:
              hvac_mode: auto
          - service: climate.set_temperature
            target:
              entity_id: !input klima
            data:
              temperature: !input target_temp
          # Notifikácie: AUTO
          - choose:
              - conditions: "{{ notify_enable_phone }}"
                sequence:
                  - domain: mobile_app
                    type: notify
                    device_id: !input notify_device
                    title: "VPD AC: AUTO"
                    message: "AC set to AUTO at target temperature"
              - conditions: "{{ notify_enable_ui }}"
                sequence:
                  - service: persistent_notification.create
                    data:
                      title: "VPD AC: AUTO"
                      message: "AC set to AUTO at target temperature"


