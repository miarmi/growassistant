blueprint:
  name: VPD AC controller (event-driven)
  description: |
    Listens for `vpd_mode` events from the decider and sets AC accordingly.
    DRY when mode=dehumidify, AUTO + temperature otherwise.
  domain: automation
  input:
    klima:
      name: Klimatizácia
      selector:
        entity:
          domain: climate
    temp_sensor:
      name: Senzor teploty
      selector:
        entity:
          domain: sensor
    target_temp:
      name: Cieľová teplota (pre AUTO)
      default: 30
      selector:
        number:
          min: 15
          max: 40
          step: 0.5
          unit_of_measurement: "°C"
    min_temp:
      name: Minimálna teplota pre HEAT (pri odvlhčovaní)
      description: Ak je teplota pod touto hodnotou a režim je dehumidify, nastaví sa HEAT; inak DRY.
      default: 22
      selector:
        number:
          min: 10
          max: 35
          step: 0.5
          unit_of_measurement: "°C"

    enable_heat_assist:
      name: Povoliť teplotnú asistenciu (HEAT pri dehumidify pod minimom)
      default: true
      selector:
        boolean:

    dry_pulse_seconds:
      name: DRY pulz (sekundy)
      default: 45
      selector:
        number:
          min: 10
          max: 300
          step: 5
          unit_of_measurement: s

    compressor_min_off_seconds:
      name: Minimálny OFF čas kompresora
      default: 180
      selector:
        number:
          min: 0
          max: 900
          step: 5
          unit_of_measurement: s

    dry_max_temp_drop:
      name: Maximálny pokles T počas DRY pulzu (°C)
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 3
          step: 0.1
          unit_of_measurement: "°C"

    heat_pulse_seconds:
      name: HEAT pulz (sekundy)
      default: 20
      selector:
        number:
          min: 5
          max: 120
          step: 5
          unit_of_measurement: s

    heat_max_temp_overshoot:
      name: Maximálne prehriatie nad začiatok (°C)
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 3
          step: 0.1
          unit_of_measurement: "°C"

    fan_mode_dry:
      name: Fan mode pre DRY (nechaj prázdne ak nepodporované)
      default: ""
      selector:
        text:
    enable_switch:
      name: Prepínač povolenia regulácie
      selector:
        entity:
          domain: input_boolean

    # Notifikácie (voliteľné)
    notify_enable_phone:
      name: Posielať notifikácie na telefón?
      default: true
      selector:
        boolean:
    notify_device:
      name: Telefón pre notifikácie
      default: []
      selector:
        device:
          integration: mobile_app
    notify_enable_ui:
      name: Posielať notifikácie do HA UI?
      default: false
      selector:
        boolean:

trigger:
  - platform: event
    event_type: vpd_mode

mode: single

condition:
  - condition: state
    entity_id: !input enable_switch
    state: "on"

action:
  - variables:
      mode: "{{ trigger.event.data.mode | default('normal') }}"
      temp_entity: !input temp_sensor
      current_temp: "{{ states(temp_entity) | float(0) }}"
      min_temp: !input min_temp
      heat_enabled: !input enable_heat_assist
      dry_pulse_seconds: !input dry_pulse_seconds
      compressor_min_off_seconds: !input compressor_min_off_seconds
      dry_max_temp_drop: !input dry_max_temp_drop
      heat_pulse_seconds: !input heat_pulse_seconds
      heat_max_temp_overshoot: !input heat_max_temp_overshoot
      fan_mode_dry: !input fan_mode_dry
      target_temp_val: !input target_temp

      # Autotune overrides (if helpers exist and autotune is ON)
      autotune_on: "{{ is_state('input_boolean.ga_autotune_enable','on') }}"
      min_temp_eff: >-
        {{ (states('input_number.ga_min_temp')|float(min_temp)) if autotune_on else min_temp }}
      dry_pulse_eff: >-
        {{ (states('input_number.ga_dry_pulse')|int(dry_pulse_seconds)) if autotune_on else (dry_pulse_seconds|int) }}
      heat_pulse_eff: >-
        {{ (states('input_number.ga_heat_pulse')|int(heat_pulse_seconds)) if autotune_on else (heat_pulse_seconds|int) }}
      dry_drop_cap_eff: >-
        {{ (states('input_number.ga_dry_drop_cap')|float(dry_max_temp_drop)) if autotune_on else dry_max_temp_drop }}
      heat_overshoot_cap_eff: >-
        {{ (states('input_number.ga_heat_overshoot_cap')|float(heat_max_temp_overshoot)) if autotune_on else heat_max_temp_overshoot }}

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ mode == 'dehumidify' }}"
        sequence:
          - variables:
              t_start: "{{ current_temp }}"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ heat_enabled and current_temp < min_temp_eff }}"
                sequence:
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input klima
                    data:
                      hvac_mode: heat
                  - delay:
                      seconds: "{{ heat_pulse_eff | int }}"
                  - variables:
                      t_after: "{{ states(temp_entity) | float(0) }}"
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ (t_after - t_start) > heat_overshoot_cap_eff }}"
                        sequence:
                          - service: climate.set_hvac_mode
                            target:
                              entity_id: !input klima
                            data:
                              hvac_mode: auto
                  - service: logbook.log
                    data:
                      name: "GrowAssistant"
                      message: >-
                        AC controller → HEAT pulse {{ heat_pulse_eff }}s (ΔT={{ (t_after - t_start) | round(2) }}°C; cap={{ heat_overshoot_cap_eff }}°C)
                      entity_id: "{{ this.entity_id }}"
            default:
              - service: climate.set_hvac_mode
                target:
                  entity_id: !input klima
                data:
                  hvac_mode: dry
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ fan_mode_dry != '' }}"
                    sequence:
                      - service: climate.set_fan_mode
                        target:
                          entity_id: !input klima
                        data:
                          fan_mode: "{{ fan_mode_dry }}"
              - delay:
                  seconds: "{{ dry_pulse_eff | int }}"
              - variables:
                  t_after: "{{ states(temp_entity) | float(0) }}"
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ (t_start - t_after) > dry_drop_cap_eff }}"
                    sequence:
                      - service: climate.set_hvac_mode
                        target:
                          entity_id: !input klima
                        data:
                          hvac_mode: auto
              - delay:
                  seconds: "{{ compressor_min_off_seconds | int }}"
              - service: logbook.log
                data:
                  name: "GrowAssistant"
                  message: >-
                    AC controller → DRY pulse {{ dry_pulse_eff }}s (ΔT={{ (t_start - t_after) | round(2) }}°C; cap={{ dry_drop_cap_eff }}°C); cooldown {{ compressor_min_off_seconds }}s
                  entity_id: "{{ this.entity_id }}"
          # Notifikácie: DRY
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ notify_enable_phone }}"
                sequence:
                  - domain: mobile_app
                    type: notify
                    device_id: !input notify_device
                    title: "VPD AC: DRY"
                    message: "AC set to DRY (mode=dehumidify)"
              - conditions:
                  - condition: template
                    value_template: "{{ notify_enable_ui }}"
                sequence:
                  - service: persistent_notification.create
                    data:
                      title: "VPD AC: DRY"
                      message: "AC set to DRY (mode=dehumidify)"
      - conditions:
          - condition: template
            value_template: "{{ mode == 'humidify' or mode == 'normal' }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input klima
            data:
              hvac_mode: auto
          - service: climate.set_temperature
            target:
              entity_id: !input klima
            data:
              temperature: !input target_temp
          - service: logbook.log
            data:
              name: "GrowAssistant"
              message: "AC controller → set AUTO @ {{ target_temp_val }}°C (mode={{ mode }})"
              entity_id: "{{ this.entity_id }}"
          # Notifikácie: AUTO
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ notify_enable_phone }}"
                sequence:
                  - domain: mobile_app
                    type: notify
                    device_id: !input notify_device
                    title: "VPD AC: AUTO"
                    message: "AC set to AUTO at target temperature"
              - conditions:
                  - condition: template
                    value_template: "{{ notify_enable_ui }}"
                sequence:
                  - service: persistent_notification.create
                    data:
                      title: "VPD AC: AUTO"
                      message: "AC set to AUTO at target temperature"


