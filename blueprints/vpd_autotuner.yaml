blueprint:
  name: VPD autotuner (experimental, no-helpers)
  description: |
    Listens to `vpd_mode` and emits `vpd_control` with recommended parameters
    (dry_pulse, heat_pulse, min_temp, dry_drop_cap, heat_overshoot_cap).
    If helpers exist, it will also nudge them (optional), but they are not required.
  domain: automation
  input:
    enable_switch:
      name: Autotune enable
      selector:
        entity:
          domain: input_boolean
      default: input_boolean.ga_autotune_enable
    aggressiveness:
      name: Aggressiveness (0-1)
      selector:
        entity:
          domain: input_number
      default: input_number.ga_aggressiveness

trigger:
  - platform: event
    event_type: vpd_mode

mode: queued
max: 10

condition:
  - condition: state
    entity_id: !input enable_switch
    state: "on"

action:
  - variables:
      mode: "{{ trigger.event.data.mode }}"
      vpd: "{{ (trigger.event.data.vpd | float(0)) }}"
      temp: "{{ (trigger.event.data.temp | float(0)) }}"
      aggr: "{{ states(!input aggressiveness) | float(0.5) }}"

      # Simple heuristic recommendations
      rec_dry_pulse: "{{ 45 + (aggr*15) if mode == 'dehumidify' else 30 }}"
      rec_heat_pulse: "{{ 15 + (aggr*10) }}"
      rec_min_temp: "{{ 22 - (aggr*0.5) }}"
      rec_dry_drop_cap: "{{ 0.5 + (aggr*0.3) }}"
      rec_heat_overshoot_cap: "{{ 0.5 + (aggr*0.3) }}"

  - event: vpd_control
    event_data:
      mode: "{{ mode }}"
      dry_pulse: "{{ rec_dry_pulse | round(0) }}"
      heat_pulse: "{{ rec_heat_pulse | round(0) }}"
      min_temp: "{{ rec_min_temp | round(1) }}"
      dry_drop_cap: "{{ rec_dry_drop_cap | round(1) }}"
      heat_overshoot_cap: "{{ rec_heat_overshoot_cap | round(1) }}"

  - choose:
      - conditions:
          - condition: state
            entity_id: input_boolean.ga_autotune_enable
            state: "on"
        sequence:
          - service: input_number.set_value
            target: { entity_id: input_number.ga_dry_pulse }
            data:
              value: "{{ rec_dry_pulse }}"
          - service: input_number.set_value
            target: { entity_id: input_number.ga_heat_pulse }
            data:
              value: "{{ rec_heat_pulse }}"
          - service: input_number.set_value
            target: { entity_id: input_number.ga_min_temp }
            data:
              value: "{{ rec_min_temp }}"
          - service: input_number.set_value
            target: { entity_id: input_number.ga_dry_drop_cap }
            data:
              value: "{{ rec_dry_drop_cap }}"
          - service: input_number.set_value
            target: { entity_id: input_number.ga_heat_overshoot_cap }
            data:
              value: "{{ rec_heat_overshoot_cap }}"


